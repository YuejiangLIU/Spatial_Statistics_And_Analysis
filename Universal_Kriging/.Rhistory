source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
lfit <- lm(temp~coordZ)
summary(lfit)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
summary(lfit)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source('D:/Ma3/Spatial_statistics_and_analysis/Part_2/ex5/ex5.R', echo=TRUE)
vario.temp <- variogram(temp~1,data,boundaries=boundaries,cressie=TRUE)
main <- "Isotropic sample variogram of temperature (Cressie)"
xlab <- "Distance lag [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,1500)
ylim <- c(0,max(vario.temp$gamma))
file <- paste(path,"Cressie_variogram_temp.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
plot(vario.temp$dist,vario.temp$gamma,main=main,xlab=xlab,ylab=ylab,xlim=xlim,ylim=ylim,lwd=1.5,cex=0.8,cex.lab=1.25,cex.axis=1.1)
dev.off()
vario.temp <- variogram(temp~1,data,boundaries=boundaries,cressie=TRUE)
main <- "Isotropic sample variogram of temperature (Cressie)"
xlab <- "Distance lag [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,500)
ylim <- c(0,max(vario.temp$gamma))
file <- paste(path,"Cressie_variogram_temp.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
plot(vario.temp$dist,vario.temp$gamma,main=main,xlab=xlab,ylab=ylab,xlim=xlim,ylim=ylim,lwd=1.5,cex=0.8,cex.lab=1.25,cex.axis=1.1)
dev.off()
vario.temp <- variogram(temp~1,data,boundaries=boundaries,cressie=TRUE)
main <- "Isotropic sample variogram of temperature (Cressie)"
xlab <- "Distance lag [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
plot(vario.temp$dist,vario.temp$gamma,main=main,xlab=xlab,ylab=ylab,xlim=xlim,ylim=ylim,lwd=1.5,cex=0.8,cex.lab=1.25,cex.axis=1.1)
dev.off()
vario.temp <- variogram(temp~1,data,boundaries=boundaries,cressie=TRUE)
main <- "Isotropic sample variogram of temperature (Cressie)"
xlab <- "Distance lag [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
temp_vgm <- vgm(psill=15,model="Sph",range=200,nugget=0.5)
temp_fit <- fit.variogram(object=vario.temp,model=temp_vgm)
plot(vario.temp,temp_fit,main=main,xlab=xlab,ylab=ylab,xlim=xlim,ylim=ylim,lwd=1.5,cex=0.8,cex.lab=1.25,cex.axis=1.1)
dev.off()
main <- "Variogram of temperature vs altitude (Cressie)"
xlab <- "Altitude [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp_altitude.png",sep="")
png(file,width=1200,height=1000,res=200)
plot(coordZ,vario.temp$gamma)
dev.off()
main <- "Variogram of temperature vs altitude (Cressie)"
xlab <- "Altitude [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp_altitude.png",sep="")
png(file,width=1200,height=1000,res=200)
plot(coordZ,vario.temp$gamma,main=main,xlab=xlab,ylab=ylab)
dev.off()
vario.temp$gamma
main <- "Variogram of temperature vs altitude (Cressie)"
xlab <- "Altitude [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp_altitude.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
plot(coordZ,vario.temp$gamma,main=main,xlab=xlab,ylab=ylab)
dev.off()
vario.temp_alt<- variogram(temp~coordZ,data,boundaries=boundaries,cressie=TRUE)
main <- "Variogram of temperature vs altitude (Cressie)"
xlab <- "Altitude [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp_alt$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp_altitude.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
temp_alt_vgm <- vgm(psill=15,model="Sph",range=200,nugget=0.5)
temp_alt_fit <- fit.variogram(object=vario.temp_alt,model=temp_alt_vgm)
plot(vario.temp_alt,temp_alt_fit,main=main,xlab=xlab,ylab=ylab)
dev.off()
vario.temp_alt<- variogram(temp~coordZ,data,boundaries=boundaries,cressie=TRUE)
main <- "Variogram of temperature vs altitude (Cressie)"
xlab <- "Distance lag [m]"
ylab <- "Semivariance [°C^2]"
xlim <- c(0,300)
ylim <- c(0,max(vario.temp_alt$gamma)*1.1)
file <- paste(path,"Cressie_variogram_temp_altitude.png",sep="")
png(file,width=1200,height=1000,res=200)
par(mai=c(0.95,0.95,0.5,0.3))
temp_alt_vgm <- vgm(psill=0.9,model="Sph",range=200,nugget=0.5)
temp_alt_fit <- fit.variogram(object=vario.temp_alt,model=temp_alt_vgm)
plot(vario.temp_alt,temp_alt_fit,main=main,xlab=xlab,ylab=ylab)
dev.off()
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=reg)
UK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_alt_vgm)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=reg)
UK.iso <- krige(formula=temp~coordZ,locations=data,newdata=newdata,model=temp_alt_vgm)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso  <- LM.iso[[1]]
predictions.UK.iso  <- UK.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
install.packages("hydroGOF")
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
library(hydroGOF)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(object=reg,locations=data,newdata=newdata)
UK.iso <- krige(formula=temp~coordZ,locations=data,newdata=newdata,model=temp_alt_vgm)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(object=reg,newdata=newdata)
UK.iso <- krige(formula=temp~coordZ,locations=data,newdata=newdata,model=temp_alt_vgm)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
UK.iso <- krige(formula=temp~coordZ,locations=data,newdata=newdata,model=temp_alt_vgm)
LM.iso <- predict(object=reg,newdata=newdata)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(object=reg,newdata=newdata)
UK.iso <- krige(formula=temp~coordZ,locations=data,newdata=newdata,model=temp_alt_vgm)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso  <- LM.iso[[1]]
predictions.UK.iso  <- UK.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(reg,newdata)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso  <- LM.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
UK.iso <- krige(formula=temp~coordZ,locations=data,newdata=newdata,model=temp_alt_vgm)
K.iso <- krige(formula=temp~z,locations=data,newdata=newdata,model=temp_alt_vgm)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(reg,newdata)
UK.iso <- krige(formula=temp~z,locations=data,newdata=newdata,model=temp_alt_vgm)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso  <- LM.iso[[1]]
predictions.UK.iso  <- UK.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(reg,newdata$coordZ)
UK.iso <- krige(formula=temp~z,locations=data,newdata=newdata,model=temp_alt_vgm)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso  <- LM.iso[[1]]
predictions.UK.iso  <- UK.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
newdata
newdata$coordZ
newdata$z
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
LM.iso <- predict(reg,newdata$z)
UK.iso <- krige(formula=temp~z,locations=data,newdata=newdata,model=temp_alt_vgm)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso  <- LM.iso[[1]]
predictions.UK.iso  <- UK.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
newdata$z
size(newdata$z)
predictions.LM.iso
predictions.OK.iso
LM.iso
predictions.OK.iso
predictions.LM.iso
LM.iso
UK.iso
LM.iso
OK.iso
newdata$z
reg
predict(reg,newdata$z)
predict.lm(reg,newdata$z)
str(newdata$z)
str()reg
str(reg)
?predict.lm
LM.iso <- predict(reg, validationZ)
reg <- lm(temp~coordZ)
LM.iso <- predict(reg, validationZ)
reg$coefficients[1]
reg$coefficients[2]
source('D:/Ma3/Spatial_statistics_and_analysis/Part_2/ex5/ex5.R', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
LM.iso
LM.iso <- predict(reg,newdata)
LM.iso
newdata$validationZ
newdata$z
predict(reg,newdata$z)
newdata$z
lm(temp~coordZ)
predict(lm(temp~coordZ),newdata$z)
UK.iso
predictions.OK.iso
predictions.OK.iso
OK.iso
predictions.OK.iso
LM.iso
UK.iso
OK.iso
newdata$z
newdata
newdata$z
newdata
predict(lm(temp~coordZ),newdata)
newdata$z
predict(lm(temp~coordZ),newdata$z)
lm(temp~coordZ)
reg
reg[[1]][1]
UK.iso
reg
reg$coefficients[1]
reg$coefficients[2]
LM.iso <- reg$coefficients[1] + reg$coefficients[2]*newdata$z
LM.iso
predictions.LM.iso  <- LM.iso[[1]]
predictions.LM.iso
LM.iso[[1]]
OK.iso <- krige(formula=temp~1,locations=data,newdata=newdata,model=temp_vgm)
UK.iso <- krige(formula=temp~z,locations=data,newdata=newdata,model=temp_alt_vgm)
predictions.OK.iso  <- OK.iso[[1]]
predictions.LM.iso <- reg$coefficients[1] + reg$coefficients[2]*newdata$z
predictions.UK.iso  <- UK.iso[[1]]
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
# Q7: Interpolate the temperature values at the locations of the DEM:
# (1) using ordinary kriging (OK)
# (2) using universal kriging (UK) and a linear trend w.r.t. the altitude
DEM.OK.iso  <- krige(formula=temp~1,locations=data,newdata=DEM,model=temp_vgm)
DEM.UK.iso <- krige(formula=temp~z,locations=data,newdata=DEM,model=temp_alt_vgm)
predictions.DEM.OK.iso  <- DEM.OK.iso[[1]]
predictions.DEM.UK.iso  <- DEM.UK.iso[[1]]
# Plot the map with the predicted temperature values
# Hint: see the code for exercise series 4
map <- data.frame(DEM.coordX,DEM.coordY,predictions.DEM.OK.iso,predictions.DEM.UK.iso)
names(map) <- c("x","y","DEM.OK.iso","DEM.UK.iso")
coordinates(map) <- ~x+y
gridded(map) <- TRUE
pts = list("sp.points",coordinates(data),pch=2,lwd=1.5,cex=0.15,col="black")
main <- "Interpolated average annual temperature [Â°C]"
xlab <- "East [km]"
ylab <- "North [km]"
file <- paste(path,"map_interpolated_temp.png",sep="")
png(file,width=2560,height=1600,res=200)
print(spplot(map[,c("DEM.OK.iso","DEM.UK.iso")],xlab=xlab,ylab=ylab,main=main,col.regions=col.palette(200),sp.layout=list(pts),scales=list(draw=TRUE)))
dev.off()
source('D:/Ma3/Spatial_statistics_and_analysis/Part_2/ex5/ex5.R', echo=TRUE)
summary(reg)
temp_fit
3.972083+12.783983
temp_alt_fit
0.3698775+0.5027771
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
mean(predictions.OK.iso-validation.temp)
rmse(predictions.OK.iso,validation.temp)
mean(predictions.LM.iso-validation.temp)
rmse(predictions.LM.iso,validation.temp)
mean(predictions.UK.iso-validation.temp)
rmse(predictions.UK.iso,validation.temp)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
